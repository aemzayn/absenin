// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique @db.VarChar(255)
  name      String   @db.VarChar(255)
  password  String
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Member {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  qrcode Qrcode?

  Organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId Int?
  EventMember    EventMember[]
}

model Qrcode {
  id     Int    @id @default(autoincrement())
  qrcode String @db.Text

  member   Member @relation(fields: [memberId], references: [id])
  memberId Int    @unique
}

model Organization {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  address   String   @db.VarChar(255)
  phone     String   @db.VarChar(255)
  email     String   @db.VarChar(255)
  website   String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  members   Member[]
  events    Event[]
}

model Event {
  id             Int           @id @default(autoincrement())
  name           String        @db.VarChar(255)
  description    String        @db.Text
  date           DateTime
  location       String        @db.VarChar(255)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @default(now()) @updatedAt
  Organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId Int?
  EventMember    EventMember[]
}

model EventMember {
  id        Int      @id @default(autoincrement())
  eventId   Int
  memberId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  event  Event  @relation(fields: [eventId], references: [id])
  member Member @relation(fields: [memberId], references: [id])
}
